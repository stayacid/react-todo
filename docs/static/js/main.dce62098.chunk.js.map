{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItem","padding","border","borderRadius","marginBottom","backgroundColor","input","marginRight","cursor","TodoItem","todo","index","onChange","removeTodo","useContext","style","className","completed","undefined","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","key","onToggle","Modal","state","isOpen","setState","this","Component","AddTodo","lazy","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","setTimeout","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","Loader","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAIeA,EAFCC,IAAMC,gBCEhBC,EAAS,CACbC,GAAI,CACFC,QAAS,OACTC,eAAgB,gBAChBC,UAAW,SACXC,QAAS,aACTC,OAAQ,iBACRC,aAAc,MACdC,aAAc,QACdC,gBAAiB,QAEnBC,MAAO,CACLC,YAAa,OACbC,OAAQ,YAkCGC,MA9Bf,YAA8C,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvBC,EAAeC,qBAAWrB,GAA1BoB,WAER,OACE,wBAAIE,MAAOnB,EAAOC,IAChB,0BAAMmB,UAAWN,EAAKO,UAAY,YAASC,GACzC,2BACEH,MAAOnB,EAAOU,MACda,KAAK,WACLC,QAASV,EAAKO,UACdL,SAAU,kBAAMA,EAASF,EAAKW,OAEhC,gCAASV,EAAQ,GAPnB,OASGD,EAAKY,OAGR,4BAAQN,UAAU,KAAKO,QAASV,EAAWW,KAAK,KAAMd,EAAKW,KAA3D,UClCAzB,EAAS,CACb6B,GAAI,CACFC,UAAW,OACXC,OAAQ,EACR1B,QAAS,IA0BE2B,MAtBf,SAAkBC,GAChB,OACE,wBAAId,MAAOnB,EAAO6B,IACfI,EAAMC,MAAMC,KAAI,SAACrB,EAAMC,GACtB,OACE,kBAAC,EAAD,CACED,KAAMA,EACNsB,IAAKtB,EAAKW,GACVV,MAAOA,EACPC,SAAUiB,EAAMI,gBCnBb,oBACb,yBAAKlB,MAAO,CAAEjB,QAAS,OAAQC,eAAgB,SAAU4B,OAAQ,WAC/D,yBAAKX,UAAU,gBACb,8BACA,8BACA,iC,4BCJekB,G,kNACnBC,MAAQ,CACNC,QAAQ,G,uDAGA,IAAD,OACP,OAEE,oCACE,4BACEpB,UAAU,MACVD,MAAO,CAAEX,aAAc,QACvBmB,QAAS,kBAAM,EAAKc,SAAS,CAAED,QAAQ,MAHzC,cAQCE,KAAKH,MAAMC,QACV,yBAAKpB,UAAU,SACb,yBAAKA,UAAU,cACb,2CACA,kDACA,4BAAQO,QAAS,kBAAM,EAAKc,SAAS,CAAED,QAAQ,MAA/C,sB,GAtBqB1C,IAAM6C,YCGnCC,EAAU9C,IAAM+C,MAAK,kBAAM,gCAkElBC,MAhEf,WAAgB,IAAD,EACahD,IAAMiD,SAAS,IAD5B,mBACNb,EADM,KACCc,EADD,OAEiBlD,IAAMiD,UAAS,GAFhC,mBAENE,EAFM,KAEGC,EAFH,KA0Cb,OAtCAC,qBAAU,WACRC,MAAM,uDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnB,GACLsB,YAAW,WACTR,EAASd,GACTgB,GAAW,KACV,UAEN,IA8BD,kBAAC,EAAQO,SAAT,CAAkBC,MAAO,CAAEzC,WAjB7B,SAAoBQ,GAClBuB,EAASd,EAAMyB,QAAO,SAAC7C,GAAD,OAAUA,EAAKW,KAAOA,SAiB1C,yBAAKL,UAAU,WACb,kDAEA,kBAAC,EAAD,MAEA,kBAAC,IAAMwC,SAAP,CAAgBC,SAAU,0CACxB,kBAACjB,EAAD,CAASkB,SApBjB,SAAiBpC,GACfsB,EACEd,EAAM6B,OAAO,CACX,CACErC,QACAD,GAAIuC,KAAKC,MACT5C,WAAW,UAiBZ4B,GAAW,kBAACiB,EAAD,MACXhC,EAAMiC,OACL,kBAAC,EAAD,CAAUjC,MAAOA,EAAOG,SAxChC,SAAoBZ,GAClBuB,EACEd,EAAMC,KAAI,SAACrB,GAIT,OAHIA,EAAKW,KAAOA,IACdX,EAAKO,WAAaP,EAAKO,WAElBP,SAmCHmC,EAAU,KACZ,eC3DVmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.dce62098.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../context\";\n\nconst styles = {\n  li: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItem: \"center\",\n    padding: \".5rem 1rem\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n    marginBottom: \".5rem\",\n    backgroundColor: \"#fff\",\n  },\n  input: {\n    marginRight: \"1rem\",\n    cursor: \"pointer\",\n  },\n};\n\nfunction TodoItem({ todo, index, onChange }) {\n  const { removeTodo } = useContext(Context);\n\n  return (\n    <li style={styles.li}>\n      <span className={todo.completed ? \"done\" : undefined}>\n        <input\n          style={styles.input}\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={() => onChange(todo.id)}\n        />\n        <strong>{index + 1}</strong>\n        &nbsp;\n        {todo.title}\n      </span>\n\n      <button className=\"rm\" onClick={removeTodo.bind(null, todo.id)}>\n        &times;\n      </button>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoItem from \"./TodoItem\";\n\nconst styles = {\n  ul: {\n    listStyle: \"none\",\n    margin: 0,\n    padding: 0,\n  },\n};\n\nfunction TodoList(props) {\n  return (\n    <ul style={styles.ul}>\n      {props.todos.map((todo, index) => {\n        return (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            index={index}\n            onChange={props.onToggle}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from \"react\";\n\nexport default () => (\n  <div style={{ display: \"flex\", justifyContent: \"center\", margin: \".5 rem\" }}>\n    <div className=\"lds-facebook\">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport \"./Modal.css\";\n\nexport default class Modal extends React.Component {\n  state = {\n    isOpen: false,\n  };\n\n  render() {\n    return (\n      // equal to <React.Fragment>\n      <>\n        <button\n          className=\"btn\"\n          style={{ marginBottom: \"1rem\" }}\n          onClick={() => this.setState({ isOpen: true })}\n        >\n          Open modal\n        </button>\n\n        {this.state.isOpen && (\n          <div className=\"modal\">\n            <div className=\"modal-body\">\n              <h1>Modal title</h1>\n              <p>I am awesome modal!</p>\n              <button onClick={() => this.setState({ isOpen: false })}>\n                Close modal\n              </button>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport Loader from \"./Loader\";\nimport Modal from \"./Modal/Modal\";\n\nconst AddTodo = React.lazy(() => import(\"./Todo/AddTodo\"));\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\n      .then((response) => response.json())\n      .then((todos) => {\n        setTimeout(() => {\n          setTodos(todos);\n          setLoading(false);\n        }, 2000);\n      });\n  }, []);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ])\n    );\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>React todo example</h1>\n\n        <Modal />\n\n        <React.Suspense fallback={<p>Loading...</p>}>\n          <AddTodo onCreate={addTodo} />\n        </React.Suspense>\n\n        {loading && <Loader />}\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : loading ? null : (\n          \"All done!\"\n        )}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}